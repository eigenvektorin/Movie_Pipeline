name: Frontend Continuous Integration

on:
  pull_request:
    branches:
      - master
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}  # Use GitHub Secret for the API URL
  DOCKER_IMAGE_NAME: mp-frontend
  DOCKER_IMAGE_TAG: ${{ github.sha }}

jobs:
  lint-frontend:
    name: 'Lint Frontend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: starter/frontend

      - name: Run ESLint
        run: npm run lint
        working-directory: starter/frontend

  test-frontend:
    name: 'Test Frontend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run tests
        run: CI=true npm test
        working-directory: starter/frontend

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-frontend, test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build --build-arg REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} \
            --tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
            starter/frontend

      - name: Run docker image
        run: docker run --name ${{ env.DOCKER_IMAGE_NAME }} -p 3000:3000 -d ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

      - name: Review logs
        run: docker logs ${{ env.DOCKER_IMAGE_NAME }}
